import java.util.*;

public class KruskalAlgo
{
	public static PriorityQueue<Edge> sortedEdgeList = null;
	
	//Builds the empty graph G and a sorted edge list.
	public static void initGraph(Graph graph)
	{
		G = new Graph(graph.n, 0);
		return;
	}
	
	//TODO: Implement Kruskal's algorithm here.
	public static void buildMinSpanningTree(Graph graph, PriorityQueue<Edge> edges, Graph minSpanningTree)
	{
		//Implement DFS for each vertex in the edge here.
	}
	
	//TODO: Implement DFS search for cycles here.
	private static boolean isPartOfCycle(Vertex v, Graph graph)
	{
		
		return true;
	}
}
